{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOPh+4jyLty1XveN9k6BZgD"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["#Question 14:"],"metadata":{"id":"n9AXta6Pyug8"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"e6-6cQnqKKiE","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1722302814473,"user_tz":-420,"elapsed":29,"user":{"displayName":"Anh Duc","userId":"12806193534041030068"}},"outputId":"81f2b9a7-21c0-477f-9cda-ce823f3dda5c"},"outputs":[{"output_type":"stream","name":"stdout","text":["[['Sunny' 'Hot' 'High' 'Weak' 'no']\n"," ['Sunny' 'Hot' 'High' 'Strong' 'no']\n"," ['Overcast' 'Hot' 'High' 'Weak' 'yes']\n"," ['Rain' 'Mild' 'High' 'Weak' 'yes']\n"," ['Rain' 'Cool' 'Normal' 'Weak' 'yes']\n"," ['Rain' 'Cool' 'Normal' 'Strong' 'no']\n"," ['Overcast' 'Cool' 'Normal' 'Strong' 'yes']\n"," ['Overcast' 'Mild' 'High' 'Weak' 'no']\n"," ['Sunny' 'Cool' 'Normal' 'Weak' 'yes']\n"," ['Rain' 'Mild' 'Normal' 'Weak' 'yes']]\n"]}],"source":["\n","import numpy as np\n","\n","def create_train_data():\n","\n","  data=[['Sunny','Hot', 'High', 'Weak', 'no'],\n","        ['Sunny','Hot', 'High', 'Strong', 'no'],\n","        ['Overcast','Hot', 'High', 'Weak', 'yes'],\n","        ['Rain','Mild', 'High', 'Weak', 'yes'],\n","        ['Rain','Cool', 'Normal', 'Weak', 'yes'],\n","        ['Rain','Cool', 'Normal', 'Strong', 'no'],\n","        ['Overcast','Cool', 'Normal', 'Strong', 'yes'],\n","        ['Overcast','Mild', 'High', 'Weak', 'no'],\n","        ['Sunny','Cool', 'Normal', 'Weak', 'yes'],\n","        ['Rain','Mild', 'Normal', 'Weak', 'yes']\n","        ]\n","  return np.array(data)\n","\n","train_data = create_train_data()\n","print(train_data)"]},{"cell_type":"code","source":["def compute_prior_probabilities(train_data):\n","  y_unique = ['no', 'yes']\n","  prior_probability = np.zeros(len(y_unique))\n","  for i in range(len(y_unique)):\n","    prior_probability[i] = np.sum(train_data[:, -1] == y_unique[i]) / len(train_data)\n","\n","  return prior_probability\n","\n","prior_probablity = compute_prior_probabilities(train_data)\n","print(\"P(play tennis = No)\", prior_probablity[0])\n","print(\"P(play tennis = Yes)\", prior_probablity[1])"],"metadata":{"id":"G3KXqdssLmQr","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1722302814474,"user_tz":-420,"elapsed":25,"user":{"displayName":"Anh Duc","userId":"12806193534041030068"}},"outputId":"2c6dbb7d-fd78-4c56-d4e7-d8f802214693"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["P(play tennis = No) 0.4\n","P(play tennis = Yes) 0.6\n"]}]},{"cell_type":"code","source":["def compute_conditional_probabilities(train_data):\n","  y_unique = ['no', 'yes']\n","  conditional_probability = []\n","  list_x_name = []\n","  for i in range(0, train_data.shape[1] -1):\n","    x_unique = np.unique(train_data[:, i])\n","    list_x_name.append(x_unique)\n","    x_conditional_probability = np.zeros((len(y_unique), len(x_unique)))\n","    for j in range(len(y_unique)):\n","      for k in range(len(x_unique)):\n","        x_conditional_probability[j,k] = len(np.where((train_data[:, i] == x_unique[k]) & (train_data[:,4]==y_unique[j]))[0])/len(np.where(train_data[:,4]==y_unique[j])[0])\n","    conditional_probability.append(x_conditional_probability)\n","  return conditional_probability, list_x_name\n","conditional_probability, list_x_name = compute_conditional_probabilities(train_data)\n","print(conditional_probability)\n","print(list_x_name)"],"metadata":{"id":"at-dDxrQ_pyj","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1722311647807,"user_tz":-420,"elapsed":395,"user":{"displayName":"Anh Duc","userId":"12806193534041030068"}},"outputId":"64490119-6f43-4b97-af18-1b400e58fa3c"},"execution_count":79,"outputs":[{"output_type":"stream","name":"stdout","text":["[array([[0.25      , 0.25      , 0.5       ],\n","       [0.33333333, 0.5       , 0.16666667]]), array([[0.25      , 0.5       , 0.25      ],\n","       [0.5       , 0.16666667, 0.33333333]]), array([[0.75      , 0.25      ],\n","       [0.33333333, 0.66666667]]), array([[0.5       , 0.5       ],\n","       [0.16666667, 0.83333333]])]\n","[array(['Overcast', 'Rain', 'Sunny'], dtype='<U8'), array(['Cool', 'Hot', 'Mild'], dtype='<U8'), array(['High', 'Normal'], dtype='<U8'), array(['Strong', 'Weak'], dtype='<U8')]\n"]}]},{"cell_type":"markdown","source":["#Question 15:"],"metadata":{"id":"9VeNRf6F0mJA"}},{"cell_type":"code","source":["train_data = create_train_data()\n","_, list_x_name  = compute_conditional_probabilities(train_data)\n","print(\"x1 = \",list_x_name[0])\n","print(\"x2 = \",list_x_name[1])\n","print(\"x3 = \",list_x_name[2])\n","print(\"x4 = \",list_x_name[3])"],"metadata":{"id":"n4NEKcFQMEph","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1722311650304,"user_tz":-420,"elapsed":10,"user":{"displayName":"Anh Duc","userId":"12806193534041030068"}},"outputId":"d47e2676-d552-479c-d510-7122e1549786"},"execution_count":80,"outputs":[{"output_type":"stream","name":"stdout","text":["x1 =  ['Overcast' 'Rain' 'Sunny']\n","x2 =  ['Cool' 'Hot' 'Mild']\n","x3 =  ['High' 'Normal']\n","x4 =  ['Strong' 'Weak']\n"]}]},{"cell_type":"code","source":["def get_index_from_value(feature_name, list_features):\n","  return np.where(list_features == feature_name)[0][0]"],"metadata":{"id":"9z_xN19zclGV","executionInfo":{"status":"ok","timestamp":1722311342763,"user_tz":-420,"elapsed":10,"user":{"displayName":"Anh Duc","userId":"12806193534041030068"}}},"execution_count":68,"outputs":[]},{"cell_type":"markdown","source":["#Question 16:"],"metadata":{"id":"ynf1Awt-jumN"}},{"cell_type":"code","source":["train_data = create_train_data()\n","_,list_x_name = compute_conditional_probabilities(train_data)\n","outlook = list_x_name[0]\n","i1 = get_index_from_value(\"Overcast\", outlook)\n","i2 = get_index_from_value(\"Rain\", outlook)\n","i3 = get_index_from_value(\"Sunny\", outlook)\n","print(i1, i2, i3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hBUaihcKjwDz","executionInfo":{"status":"ok","timestamp":1722311344403,"user_tz":-420,"elapsed":9,"user":{"displayName":"Anh Duc","userId":"12806193534041030068"}},"outputId":"4d5260bb-9f9d-43ad-da1d-983fbd7e5ac4"},"execution_count":69,"outputs":[{"output_type":"stream","name":"stdout","text":["0 1 2\n"]}]},{"cell_type":"markdown","source":["#Question 17:"],"metadata":{"id":"xcl4XVRtnuug"}},{"cell_type":"code","source":["train_data = create_train_data()\n","conditional_probability , list_x_name = compute_conditional_probabilities(train_data)\n","x1 = get_index_from_value(\"Sunny\", list_x_name[0])\n","print(\"P('Outlook'= 'Sunny'| 'Play Tennis'= 'Yes') =\", np.round(conditional_probability[0][1, x1],2))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XkHD6Im5n3xP","executionInfo":{"status":"ok","timestamp":1722311345825,"user_tz":-420,"elapsed":10,"user":{"displayName":"Anh Duc","userId":"12806193534041030068"}},"outputId":"bf779725-fc54-435d-9768-b40e0b3dfff0"},"execution_count":70,"outputs":[{"output_type":"stream","name":"stdout","text":["P('Outlook'= 'Sunny'| 'Play Tennis'= 'Yes') = 0.17\n"]}]},{"cell_type":"markdown","source":["#Question 18:"],"metadata":{"id":"2oYwlO3EnvDT"}},{"cell_type":"code","source":["train_data = create_train_data()\n","conditional_probability , list_x_name = compute_conditional_probabilities(train_data)\n","x1 = get_index_from_value(\"Sunny\", list_x_name[0])\n","print(\"P('Outlook'= 'Sunny'| 'Play Tennis'= 'No') =\", np.round(conditional_probability[0][0, x1],2))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Xs5M2bEln05J","executionInfo":{"status":"ok","timestamp":1722310953362,"user_tz":-420,"elapsed":424,"user":{"displayName":"Anh Duc","userId":"12806193534041030068"}},"outputId":"93b5c28c-93d1-4656-85ef-21e5566dd0e8"},"execution_count":51,"outputs":[{"output_type":"stream","name":"stdout","text":["P('Outlook'= 'Sunny'| 'Play Tennis'= 'No') = 0.5\n"]}]},{"cell_type":"markdown","source":["#Question 19:"],"metadata":{"id":"cAWWjfI7nvGJ"}},{"cell_type":"code","source":["def train_naive_bayes(train_data):\n","  y_unique = ['no', 'yes']\n","  prior_probablity = compute_prior_probabilities(train_data)\n","  conditional_probability , list_x_name = compute_conditional_probabilities(train_data)\n","  return prior_probablity, conditional_probability, list_x_name\n","\n","data = create_train_data()\n","prior_probability,conditional_probability, list_x_name = train_naive_bayes(data)"],"metadata":{"id":"kPf7klRSn4zQ","executionInfo":{"status":"ok","timestamp":1722311348833,"user_tz":-420,"elapsed":10,"user":{"displayName":"Anh Duc","userId":"12806193534041030068"}}},"execution_count":71,"outputs":[]},{"cell_type":"code","source":["def predict_play_tennis(x, list_x_name, prior_probablity, conditional_probability):\n","  x1 = get_index_from_value(x[0], list_x_name[0])\n","  x2 = get_index_from_value(x[1], list_x_name[1])\n","  x3 = get_index_from_value(x[2], list_x_name[2])\n","  x4 = get_index_from_value(x[3], list_x_name[3])\n","\n","  p0 = prior_probablity[0] * conditional_probability[0][0, x1] * conditional_probability[1][0, x2] * conditional_probability[2][0, x3] * conditional_probability[3][0, x4]\n","  p1 = prior_probablity[1] * conditional_probability[0][1, x1] * conditional_probability[1][1, x2] * conditional_probability[2][1, x3] * conditional_probability[3][1, x4]\n","  if p0 > p1:\n","    y_pred = 0\n","  else:\n","    y_pred = 1\n","  return y_pred"],"metadata":{"id":"vIUzSkxurTA8","executionInfo":{"status":"ok","timestamp":1722311565407,"user_tz":-420,"elapsed":409,"user":{"displayName":"Anh Duc","userId":"12806193534041030068"}}},"execution_count":77,"outputs":[]},{"cell_type":"code","source":["\n","X = ['Sunny','Cool', 'High', 'Strong']\n","data = create_train_data()\n","prior_probability,conditional_probability, list_x_name = train_naive_bayes(data)\n","pred =  predict_play_tennis(X, list_x_name, prior_probability, conditional_probability)\n","\n","if(pred):\n","  print(\"Ad should go!\")\n","else:\n","  print(\"Ad should not go!\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uFBrhLcAsfqe","executionInfo":{"status":"ok","timestamp":1722311556788,"user_tz":-420,"elapsed":9,"user":{"displayName":"Anh Duc","userId":"12806193534041030068"}},"outputId":"688667e4-9757-4427-8e7f-0730e34cf5cc"},"execution_count":76,"outputs":[{"output_type":"stream","name":"stdout","text":["P(play tennis = No) = 0.018750000000000003\n","P(play tennis = Yes) = 0.002777777777777777\n","Ad should not go!\n"]}]}]}